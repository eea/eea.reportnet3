const expressions1 = {
  expressionType: [expression1, expression2, expression3],

  jsonTranslation: {
    operator: expression1.operator,
    params: ['fieldId', 'VALUE']
  }
};
const expressions2 = {
  expressionType: [expression1, expression2],

  jsonTranslation: {
    operator: expression2.union,
    params: [
      {
        operator: expression1.operator,
        params: ['fieldId', 'VALUE']
      },
      {
        operator: expression2.operator,
        params: ['fieldID', 'VALUE']
      }
    ]
  }
};
const expressions3 = {
  expressionType: [expression1, expression2, expression3],

  jsonTranslation: {
    operator: expression2.union,
    params: [
      {
        operator: expression1.operator,
        params: ['fieldId', 'VALUE']
      },
      {
        operator: expression3.union,
        params: [
          {
            operator: expression2.operator,
            params: ['fieldID', 'VALUE']
          },
          {
            operator: expression3.operator,
            params: ['fieldID', 'VALUE']
          }
        ]
      }
    ]
  }
};
const expressions4 = {
  expressionType: [expression1, group2, expression3, expression4],
  expressionFormula: '(field1 > 10) AND ((field1 < 1000) OR (field1 != 100)) AND (field1 != 500) AND (field1 == 1000)',
  jsonTranslation: {
    operator: 'AND',
    params: [
      {
        operator: 'FIELD_GT',
        params: ['VALUE', 10]
      },
      {
        operator: 'AND',
        params: [
          {
            operator: 'OR',
            params: [
              {
                operator: 'FIELD_LT',
                params: ['VALUE', 1000]
              },
              {
                operator: 'FIELD_NOT_EQ',
                params: ['VALUE', 100]
              }
            ]
          },

          {
            operator: 'AND',
            params: [
              {
                operator: 'FIELD_DISNT',
                params: ['VALUE', 500]
              },
              {
                operator: 'EQ',
                params: ['VALUE', 1000]
              }
            ]
          }
        ]
      }
    ]
  }
};
