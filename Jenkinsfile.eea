pipeline {

    agent { node { label 'docker' } }
    tools {
        maven 'maven3'
        jdk 'Java8'
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '4', artifactNumToKeepStr: '2'))
        timeout(time: 60, unit: 'MINUTES')
    }
    stages {
        //Project Build
        stage('Project Build') {
            steps {
                sh 'mvn clean -B -V verify'
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('Report to SonarQube') {
            steps {
                withSonarQubeEnv('Sonarqube') {
                    // requires SonarQube Scanner for Maven 3.2+
                    sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar -P sonar -Dsonar.jenkins.branch=' + env.BRANCH_NAME.replace('/', '_')
                }
            }
        }
    }
}