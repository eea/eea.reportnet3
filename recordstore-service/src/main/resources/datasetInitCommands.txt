CREATE schema %dataset_name% AUTHORIZATION %user%;

CREATE TABLE %dataset_name%.DATASET_VALUE (ID bigint, ID_DATASET_SCHEMA text, PRIMARY key (ID))  TABLESPACE pg_default;
CREATE TABLE %dataset_name%.TABLE_VALUE (ID bigint, ID_TABLE_SCHEMA text, DATASET_ID bigint, PRIMARY key (ID), FOREIGN KEY (dataset_id) REFERENCES %dataset_name%.dataset_value(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.RECORD_VALUE(ID bigint, ID_RECORD_SCHEMA text, ID_TABLE bigint, DATASET_PARTITION_ID bigint, PRIMARY key (ID), FOREIGN KEY (id_table) REFERENCES %dataset_name%.table_value(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.FIELD_VALUE (ID bigint, TYPE text, VALUE text, ID_FIELD_SCHEMA text, ID_RECORD bigint, PRIMARY key (ID), FOREIGN KEY (id_record) REFERENCES %dataset_name%.record_value(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE  %dataset_name%.VALIDATION (ID bigint,ID_RULE text,LEVEL_ERROR text, MESSAGE text, TYPE_ENTITY text, VALIDATION_DATE text, ORIGIN_NAME TEXT, PRIMARY KEY (id));
CREATE TABLE %dataset_name%.DATASET_VALIDATION (ID bigint,ID_DATASET bigint,ID_VALIDATION bigint, PRIMARY KEY (ID), FOREIGN KEY (ID_VALIDATION) REFERENCES %dataset_name%.VALIDATION(ID) ON DELETE CASCADE,FOREIGN KEY (ID_DATASET) REFERENCES %dataset_name%.DATASET_VALUE(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.TABLE_VALIDATION (ID bigint,ID_TABLE bigint,ID_VALIDATION bigint, PRIMARY KEY (ID), FOREIGN KEY (ID_VALIDATION) REFERENCES %dataset_name%.VALIDATION(ID) ON DELETE CASCADE,FOREIGN KEY (ID_TABLE) REFERENCES %dataset_name%.TABLE_VALUE(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.RECORD_VALIDATION (ID bigint,ID_RECORD bigint,ID_VALIDATION bigint, PRIMARY KEY (ID), FOREIGN KEY (ID_VALIDATION) REFERENCES %dataset_name%.VALIDATION(ID) ON DELETE CASCADE,FOREIGN KEY (ID_RECORD) REFERENCES %dataset_name%.RECORD_VALUE(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.FIELD_VALIDATION (ID bigint,ID_FIELD bigint,ID_VALIDATION bigint, PRIMARY KEY (ID), FOREIGN KEY (ID_VALIDATION) REFERENCES %dataset_name%.VALIDATION(ID) ON DELETE CASCADE ,FOREIGN KEY (ID_FIELD) REFERENCES %dataset_name%.FIELD_VALUE(id) ON DELETE CASCADE) TABLESPACE pg_default;
CREATE TABLE %dataset_name%.STATISTICS (ID bigint, ID_TABLE_SCHEMA text, STAT_NAME text, VALUE text, PRIMARY KEY (ID));


ALTER TABLE %dataset_name%.DATASET_VALUE  OWNER to %user%;
ALTER TABLE %dataset_name%.TABLE_VALUE  OWNER to %user%;
ALTER TABLE %dataset_name%.RECORD_VALUE  OWNER to %user%;
ALTER TABLE %dataset_name%.FIELD_VALUE  OWNER to %user%;
ALTER TABLE %dataset_name%.DATASET_VALIDATION OWNER TO %user%;
ALTER TABLE %dataset_name%.TABLE_VALIDATION OWNER TO %user%;
ALTER TABLE %dataset_name%.FIELD_VALIDATION OWNER TO %user%;
ALTER TABLE %dataset_name%.RECORD_VALIDATION OWNER TO %user%;
ALTER TABLE %dataset_name%.VALIDATION OWNER TO %user%;
ALTER TABLE %dataset_name%.STATISTICS OWNER TO %user%;

CREATE SEQUENCE %dataset_name%.field_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.record_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.table_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.field_validation_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.record_validation_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.table_validation_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.dataset_validation_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.validation_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
CREATE SEQUENCE %dataset_name%.statistics_sequence INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE;
	

ALTER SEQUENCE %dataset_name%.field_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.field_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.record_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.record_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.table_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.table_sequence TO %user%;

CREATE INDEX idx_record_value ON %dataset_name%.field_value(id_record);
CREATE INDEX idx_field_schema ON %dataset_name%.field_value(id_field_schema);
CREATE INDEX idx_dataset_value ON %dataset_name%.table_value(dataset_id);
CREATE INDEX idx_table_schema ON %dataset_name%.table_value(id_table_schema);
CREATE INDEX idx_table_value ON %dataset_name%.record_value(id_table);
CREATE INDEX idx_record_schema ON %dataset_name%.record_value(id_record_schema);
CREATE INDEX idx_table_validation_table ON %dataset_name%.table_validation(id_table);
CREATE INDEX idx_table_validation_validation ON %dataset_name%.table_validation(id_validation);
CREATE INDEX idx_dataset_validation_dataset ON %dataset_name%.dataset_validation(id_dataset);
CREATE INDEX idx_dataset_validation_validation ON %dataset_name%.dataset_validation(id_validation);
CREATE INDEX idx_field_validation_field ON %dataset_name%.field_validation(id_field);
CREATE INDEX idx_field_validation_validation ON %dataset_name%.field_validation(id_validation);
CREATE INDEX idx_record_validation_record ON %dataset_name%.record_validation(id_record);
CREATE INDEX idx_record_validation_validation ON %dataset_name%.record_validation(id_validation);
CREATE INDEX idx_validation_level_error ON %dataset_name%.validation(level_error);
CREATE INDEX idx_stats_table_schema ON %dataset_name%.statistics(id_table_schema);

ALTER SEQUENCE %dataset_name%.field_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.field_validation_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.record_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.record_validation_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.table_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.table_validation_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.validation_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.validation_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.dataset_validation_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.dataset_validation_sequence TO %user%;

ALTER SEQUENCE %dataset_name%.statistics_sequence OWNER TO %user%;
GRANT ALL ON SEQUENCE %dataset_name%.statistics_sequence TO %user%;

CREATE OR REPLACE FUNCTION %dataset_name%.is_numeric(text) RETURNS boolean  LANGUAGE plpgsql  IMMUTABLE STRICT AS $function$ DECLARE x NUMERIC; BEGIN x = $1::NUMERIC; RETURN TRUE; EXCEPTION WHEN others THEN RETURN FALSE; END; $function$;
CREATE OR REPLACE FUNCTION %dataset_name%.is_double(text) RETURNS boolean LANGUAGE plpgsql IMMUTABLE STRICT AS $function$ DECLARE x double precision;BEGIN    x = $1::double precision;    RETURN TRUE;EXCEPTION WHEN others THEN    RETURN FALSE;END;$function$;
CREATE OR REPLACE FUNCTION %dataset_name%.is_date(s character varying) RETURNS boolean LANGUAGE plpgsql AS $function$ begin   perform s::date;  return true; exception when others then  return false; end; $function$;

ALTER FUNCTION %dataset_name%.is_numeric OWNER TO %user%;
GRANT EXECUTE ON FUNCTION %dataset_name%.is_numeric(text) TO %user%;
ALTER FUNCTION %dataset_name%.is_double OWNER TO %user%;
GRANT EXECUTE ON FUNCTION %dataset_name%.is_double(text) TO %user%;
ALTER FUNCTION %dataset_name%.is_date OWNER TO %user%;
GRANT EXECUTE ON FUNCTION %dataset_name%.is_date(varchar) TO %user%;


commit;